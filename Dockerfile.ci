# Dockerfile for building a CI container used by all viaduck projects
# package explanation:
# - build-essential, cmake, python3, python3-pip, cogapp, git: Basic requirements
# - libmariadbclient-dev: Required for mariadbpp
# - ninja-build: [optional] Ninja build sytem for faster builds utilizing multiple threads
# - doxygen, lcov, graphviz: [optional] Coverage and documentation generation
# - libssl-dev: [optional] OpenSSL development files from repository. Required when NOT using OpenSSL prebuilts.
# - googletest, libgtest-dev: [optional] Google Test for automated testing
# - libicu-dev, libsqlite3-dev, pkg-config: For building sqlite3
# - libboost-dev: [optional] Boost replacement for std::optional in sqlite_modern_cpp
# - qt5-default, libqt5svg5-dev: desktop UI dependencies
# - libnss3-dev, libxss-dev, libasound2-dev: CEF dependencies
# - extra-cmake-modules: libsnore dependency
# - yarn, nodejs: gui-common dependency
# - flatpak-builder: [optional] Required for building flatpaks
# - clang-10, libfuzzer-10-dev: [optional] Required for fuzzing
FROM debian:buster
ARG MIRROR=
SHELL ["/bin/bash", "-c"]

# add local mirror if specified
RUN [ -z "$MIRROR" ] || echo -e "deb $MIRROR/packages buster main contrib non-free\ndeb $MIRROR/packages buster-updates main contrib non-free\ndeb $MIRROR/security buster/updates main contrib non-free\n\n$(cat /etc/apt/sources.list)" > /etc/apt/sources.list

# update, upgrade and install
RUN apt-get update && apt-get upgrade -y
RUN apt-get install -y build-essential git curl apt-transport-https ninja-build cmake python3 doxygen python3-pip \
                libssl-dev libmariadbclient-dev lcov graphviz libicu-dev googletest libgtest-dev pkg-config \
                libsqlite3-dev libboost-dev libhiredis-dev libyaml-cpp-dev libuv1-dev mariadb-client \
                qt5-default libqt5svg5-dev extra-cmake-modules libnss3-dev libxss-dev libasound2-dev \
                flatpak-builder


# add yarn repo
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
# add node repo
RUN curl -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -
RUN echo "deb https://deb.nodesource.com/node_12.x buster main" | tee /etc/apt/sources.list.d/nodesource.list
# install yarn and node
RUN apt-get update && apt-get install -y yarn nodejs

# add LLVM repo
RUN curl -sS https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
RUN echo "deb http://apt.llvm.org/buster/ llvm-toolchain-buster-10 main" | tee /etc/apt/sources.list.d/llvm.list
# install clang and libFuzzer
RUN apt-get update && apt-get install -y clang-10 libfuzzer-10-dev

# add flathub
RUN flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

# install flatpak SDKs
RUN flatpak install -y --noninteractive org.kde.Sdk/x86_64/5.14
RUN flatpak install -y --noninteractive org.kde.Platform/x86_64/5.14
RUN flatpak install -y --noninteractive io.atom.electron.BaseApp/x86_64/19.08

RUN rm -rf /var/lib/apt/lists/*
RUN pip3 install cogapp
